openapi: 3.0.1
info:
  title: Sme.MessengerServiceHost
  version: '1.0'
paths:
  /devapi/account/my:
    get:
      tags:
        - Sme.MessengerServiceHost
      summary: GetMyAccountsRequest
      description: >-
        This endpoint lists all the user accounts somehow linked to the calling
        user, including owned subaccounts and shared accounts.
      parameters:
        - name: Main
          in: query
          description: Include the main/login account.
          schema:
            type: boolean
        - name: Sub
          in: query
          description: Include sub accounts.
          schema:
            type: boolean
        - name: Shared
          in: query
          description: Include accounts shared by other users.
          schema:
            type: boolean
        - name: Details
          in: query
          description: Include accounts' advanced properties.
          schema:
            type: boolean
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMyAccountsResponse'
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: GetMyAccountsRequest
      description: >-
        This endpoint lists all the user accounts somehow linked to the calling
        user, including owned subaccounts and shared accounts.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMyAccountsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMyAccountsResponse'
  /devapi/account/profile:
    get:
      tags:
        - Sme.MessengerServiceHost
      summary: GetAccountProfileRequest
      description: Gets the account profile's configuration and content.
      parameters:
        - name: AccountId
          in: query
          description: If not specified, the current account's profile gets returned.
          schema:
            type: string
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountProfileResponse'
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: GetAccountProfileRequest
      description: Gets the account profile's configuration and content.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccountProfileRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountProfileResponse'
  /devapi/account/profile/update:
    get:
      tags:
        - Sme.MessengerServiceHost
      summary: UpdateAccountProfileRequest
      description: This endpoint lets the user update the specified profile.
      parameters:
        - name: Title
          in: query
          schema:
            type: string
        - name: Description
          in: query
          schema:
            type: string
        - name: Avatar
          in: query
          schema:
            type: string
        - name: Visible
          in: query
          schema:
            type: boolean
        - name: Locked
          in: query
          schema:
            type: boolean
        - name: EnableReactions
          in: query
          schema:
            type: boolean
        - name: PinWall
          in: query
          schema:
            type: string
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountProfileResponse'
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: UpdateAccountProfileRequest
      description: This endpoint lets the user update the specified profile.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountProfileRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountProfileResponse'
  /devapi/account/feed:
    get:
      tags:
        - Sme.MessengerServiceHost
      summary: GetAccountFeedRequest
      description: >-
        Gets the account feed's configuration and content. Each post can only
        contain a bucket component type.
      parameters:
        - name: AccountId
          in: query
          description: If not specified, the current account's feed gets returned.
          schema:
            type: string
        - name: Before
          in: query
          description: Get feed's content published before this date.
          schema:
            type: string
        - name: After
          in: query
          description: Get feed's posts published before this date.
          schema:
            type: string
        - name: Limit
          in: query
          description: Maximum number of posts returned.
          schema:
            type: integer
            format: int32
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountFeedResponse'
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: GetAccountFeedRequest
      description: >-
        Gets the account feed's configuration and content. Each post can only
        contain a bucket component type.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccountFeedRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountFeedResponse'
  /devapi/account/feed/post/add:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: AddPostToAccountFeedRequest
      description: This endpoint allows the user to add a new post to the feed.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPostToAccountFeedRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddPostToAccountFeedResponse'
  /devapi/account/feed/post/update:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: UpdatePostContentRequest
      description: >-
        This endpoint allows the user to access the content of a post (bucket)
        and modify its content. The action is possible only if the user has the
        right permissions to modify the bucket.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePostContentRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePostContentResponse'
  /devapi/account/contacts:
    get:
      tags:
        - Sme.MessengerServiceHost
      summary: GetAccountContactsRequest
      description: Gets the account feed's configuration and content.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountContactsResponse'
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: GetAccountContactsRequest
      description: Gets the account feed's configuration and content.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccountContactsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountContactsResponse'
  /devapi/communication/p2p:
    get:
      tags:
        - Sme.MessengerServiceHost
      summary: GetP2PChatsRequest
      description: This endpoint retrieves the p2p chats of the calling user account.
      parameters:
        - name: RecipientId
          in: query
          schema:
            type: string
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetP2PChatsResponse'
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: GetP2PChatsRequest
      description: This endpoint retrieves the p2p chats of the calling user account.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetP2PChatsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetP2PChatsResponse'
  /devapi/communication/p2p/message:
    get:
      tags:
        - Sme.MessengerServiceHost
      summary: GetP2pChatMessagesRequest
      description: This endpoint retrieves the p2p chats of the calling user account.
      parameters:
        - name: RecipientId
          in: query
          description: >-
            Filters the p2p chats list by showing only the one occurring with
            the specified account id.
          schema:
            type: string
        - name: MessageId
          in: query
          schema:
            type: string
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetP2pChatMessagesResponse'
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: GetP2pChatMessagesRequest
      description: This endpoint retrieves the p2p chats of the calling user account.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetP2pChatMessagesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetP2pChatMessagesResponse'
  /devapi/communication/p2p/message/send:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: SendToP2pChatRequest
      description: >-
        This endpoint allows to send a data component to a P2P Chat as a new
        message.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendToP2pChatRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendToP2pChatResponse'
  /devapi/communication/p2p/message/sendtest:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: SendToP2pChatTestRequest
      description: >-
        This endpoint allows to send a data component to a P2P Chat as a new
        message.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendToP2pChatTestRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendToP2pChatTestResponse'
  /devapi/communication/p2p/message/update:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: UpdateP2pChatMessageRequest
      description: This endpoint allows to edit a previously sent message.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateP2pChatMessageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateP2pChatMessageResponse'
  /devapi/communication/p2p/message/reaction/send:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: ReactP2pChatMessageRequest
      description: >-
        This endpoint allows the account to send a reaction to a specific
        message in a P2P conversation.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReactP2pChatMessageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactP2pChatMessageResponse'
  /devapi/communication/p2p/message/reaction/remove:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: RemoveP2pChatMessageReactionRequest
      description: >-
        This endpoint allows the account to cancel a reaction from a specific
        message in a P2P conversation.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveP2pChatMessageReactionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactP2pChatMessageResponse'
  /devapi/communication/p2p/message/reply:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: ReplyP2pChatMessageRequest
      description: >-
        This endpoint allows the account to reply to a specific message with a
        simple text.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyP2pChatMessageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyP2pChatMessageResponse'
  /devapi/communication/groupchat:
    get:
      tags:
        - Sme.MessengerServiceHost
      summary: GetGroupChatsRequest
      description: This endpoint retrieves the p2p chats of the calling user account.
      parameters:
        - name: RecipientIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupChatsResponse'
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: GetGroupChatsRequest
      description: This endpoint retrieves the p2p chats of the calling user account.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGroupChatsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupChatsResponse'
  /devapi/communication/groupchat/create:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: CreateGroupChatRequest
      description: >-
        This endpoint creates a new group chat with a specified name. It's also
        possible to directly invite other accounts to the chat upon creation.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupChatRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGroupChatResponse'
  /devapi/communication/groupchat/message:
    get:
      tags:
        - Sme.MessengerServiceHost
      summary: GetGroupChatMessagesRequest
      description: This endpoint returns a list of messages in the specified Group chat.
      parameters:
        - name: GroupChatId
          in: query
          schema:
            type: string
        - name: MessageId
          in: query
          schema:
            type: string
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupChatMessagesResponse'
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: GetGroupChatMessagesRequest
      description: This endpoint returns a list of messages in the specified Group chat.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGroupChatMessagesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupChatMessagesResponse'
  /devapi/communication/groupchat/invite:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: InviteToGroupChatRequest
      description: >-
        This endpoint allows to invite other recipients to the specified group
        chat.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteToGroupChatRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteToGroupChatResponse'
  /devapi/communication/groupchat/message/send:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: SendToGroupChatRequest
      description: >-
        This endpoint allows to send a data component to a Group Chat as a new
        message, by specifying a conversation name.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendToGroupChatRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendToGroupChatResponse'
  /devapi/communication/groupchat/message/update:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: UpdateGroupChatMessageRequest
      description: This endpoint allows to edit a previously sent message.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupChatMessageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGroupChatMessageResponse'
  /devapi/communication/groupchat/message/reaction/send:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: ReactGroupChatMessageRequest
      description: >-
        This endpoint allows the account to send a reaction to a specific
        message in a Group conversation.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReactGroupChatMessageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactGroupChatMessageResponse'
  /devapi/communication/groupchat/message/reaction/remove:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: RemoveGroupChatMessageReactionRequest
      description: >-
        This endpoint allows the account to cancel a reaction from a specific
        message in a Group conversation.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveGroupChatMessageReactionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactGroupChatMessageResponse'
  /devapi/communication/groupchat/message/reply:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: ReplyGroupChatMessageRequest
      description: >-
        This endpoint allows the account to reply to a specific message with a
        simple text.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyGroupChatMessageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyGroupChatMessageResponse'
  /devapi/communication/channel/my:
    get:
      tags:
        - Sme.MessengerServiceHost
      summary: GetMyChannelsRequest
      description: >-
        This endpoint retrieves the channel buckets the calling user account is
        publisher or subscriber of.
      parameters:
        - name: Owner
          in: query
          schema:
            type: boolean
        - name: Editor
          in: query
          schema:
            type: boolean
        - name: Subscriber
          in: query
          schema:
            type: boolean
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMyChannelsResponse'
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: GetMyChannelsRequest
      description: >-
        This endpoint retrieves the channel buckets the calling user account is
        publisher or subscriber of.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMyChannelsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMyChannelsResponse'
  /devapi/communication/channel:
    get:
      tags:
        - Sme.MessengerServiceHost
      summary: GetChannelsRequest
      description: This endpoint finds channels based on specified parameters.
      parameters:
        - name: OwnerId
          in: query
          schema:
            type: string
        - name: EditorId
          in: query
          schema:
            type: string
        - name: ChannelId
          in: query
          schema:
            type: string
        - name: Title
          in: query
          schema:
            type: string
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelsResponse'
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: GetChannelsRequest
      description: This endpoint finds channels based on specified parameters.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChannelsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelsResponse'
  /devapi/communication/channel/message:
    get:
      tags:
        - Sme.MessengerServiceHost
      summary: GetChannelMessagesRequest
      description: This endpoint returns a list of messages in the specified Channel chat.
      parameters:
        - name: ChannelId
          in: query
          schema:
            type: string
        - name: MessageId
          in: query
          schema:
            type: string
        - name: Limit
          in: query
          schema:
            type: integer
            format: int32
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelMessagesResponse'
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: GetChannelMessagesRequest
      description: This endpoint returns a list of messages in the specified Channel chat.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChannelMessagesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelMessagesResponse'
  /devapi/communication/channel/create:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: CreateChannelRequest
      description: >-
        This endpoint allows to create a new channel and set the initial
        publishers. The role of the current accountId will be automatically
        publisher.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelResponse'
  /devapi/communication/channel/message/send:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: SendToChannelRequest
      description: >-
        This endpoint allows to send a data component to a Channel as a new
        message, by specifying a conversation name.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendToChannelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendToChannelResponse'
  /devapi/communication/channel/subscribe:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: SubscribeToChannelRequest
      description: >-
        This endpoint makes the calling account to subscribe to an existing
        channel.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeToChannelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribeToChannelResponse'
  /devapi/communication/channel/unsubscribe:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: UnsubscribeToChannelRequest
      description: >-
        This endpoint makes the calling account to unsubscribe from an existing
        channel.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnsubscribeToChannelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsubscribeToChannelResponse'
  /devapi/communication/bucket:
    get:
      tags:
        - Sme.MessengerServiceHost
      summary: OpenBucketRequest
      description: This endpoint let the user access the bucket content by its bucketId.
      parameters:
        - name: BucketId
          in: query
          schema:
            type: string
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenBucketResponse'
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: OpenBucketRequest
      description: This endpoint let the user access the bucket content by its bucketId.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenBucketRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenBucketResponse'
  /devapi/communication/bucket/update:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: UpdateBucketContentRequest
      description: >-
        This endpoint allows the user to update the content of a specific
        bucket.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBucketContentRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBucketContentResponse'
  /devapi/communication/bucket/like:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: AddLikeToBucketRequest
      description: >-
        This endpoint sets a like by the current account to any referenced
        bucket that allows likes.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddLikeToBucketRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddLikeToBucketResponse'
  /devapi/communication/bucket/unlike:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: RemoveLikeFromBucketRequest
      description: >-
        This endpoint unsets a like of the current account to any referenced
        bucket that allows likes.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveLikeFromBucketRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveLikeFromBucketResponse'
  /devapi/service/tunnel/create:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: CreateTunnelRequest
      description: >-
        This endpoint requests a SSH tunnel creation between the server and the
        calling client.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTunnelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTunnelResponse'
  /devapi/service/tunnel/close:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: CloseTunnelRequest
      description: This endpoint shuts off a tunnel.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseTunnelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloseTunnelResponse'
  /devapi/service/tunnel/open:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: OpenTunnelRequest
      description: >-
        This endpoint activates the tunnel and allocates a remote port on the
        tunnel provider.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenTunnelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenTunnelResponse'
  /devapi/service/tunnel/delete:
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: DeleteTunnelRequest
      description: This endpoint deletes a tunnel on the tunnel provider.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTunnelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTunnelResponse'
  /devapi/service/file/download:
    get:
      tags:
        - Sme.MessengerServiceHost
      summary: DownloadFileRequest
      description: >-
        This endpoint makes the client download file content from the server,
        based on the file id specified.
      parameters:
        - name: FileId
          in: query
          schema: 
            type: string
        - name: ThumbnailSize
          in: query
          schema:
            type: integer
            format: int32
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: {}
    post:
      tags:
        - Sme.MessengerServiceHost
      summary: DownloadFileRequest
      description: >-
        This endpoint makes the client download file content from the server,
        based on the file id specified.
      parameters:
        - name: X-Account
          in: header
          description: Account Id provided by API Gateway!
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadFileRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: string
                format: binary
  /devapi/service/file/upload:
    post:
      tags:
        - UploadRequestHandler
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - httpFiles
              type: object
              properties:
                httpFiles:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadFileResponse'
  /CloudServer/wsclient:
    get:
      tags:
        - WebsocketRequestHandler
      responses:
        '200':
          description: Success
  /devapi/service/ws:
    get:
      tags:
        - WebsocketRequestHandler
      responses:
        '200':
          description: Success
components:
  schemas:
    Account:
      type: object
      properties:
        accountId:
          type: string
          format: uuid
          nullable: true
        ownerAccountId:
          type: string
          format: uuid
          nullable: true
        semilimesId:
          type: string
          nullable: true
        accountName:
          type: string
          nullable: true
        parentAccountId:
          type: string
          format: uuid
          nullable: true
        onlineStatus:
          type: string
          nullable: true
        viewCount:
          type: integer
          format: int32
          nullable: true
        likeCount:
          type: integer
          format: int32
          nullable: true
        commentCount:
          type: integer
          format: int32
          nullable: true
        lastSeen:
          type: integer
          format: int64
          nullable: true
        updatedAt:
          type: integer
          format: int64
          nullable: true
        createdAt:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    AddLikeToBucketRequest:
      type: object
      properties:
        bucketId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    AddLikeToBucketResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/AddLikeToBucketResponseData'
      additionalProperties: false
    AddLikeToBucketResponseData:
      type: object
      properties:
        bucketId:
          type: string
          format: uuid
          nullable: true
        like:
          type: boolean
          nullable: true
      additionalProperties: false
    AddPostToAccountFeedRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        avatar:
          type: string
          format: uuid
          nullable: true
        visible:
          type: boolean
          nullable: true
        locked:
          type: boolean
          nullable: true
        enableReactions:
          type: boolean
          nullable: true
        dataComponents:
          type: array
          items:
            type: object
            additionalProperties: {}
          nullable: true
      additionalProperties: false
    AddPostToAccountFeedResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/AddPostToAccountFeedResponseData'
      additionalProperties: false
    AddPostToAccountFeedResponseData:
      type: object
      properties:
        feedId:
          type: string
          format: uuid
          nullable: true
        accountId:
          type: string
          format: uuid
          nullable: true
        addedPost:
          $ref: '#/components/schemas/Post'
      additionalProperties: false
    Bucket:
      type: object
      properties:
        bucketId:
          type: string
          format: uuid
          nullable: true
        ownerId:
          type: string
          format: uuid
          nullable: true
        dataComponentType:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        avatar:
          type: string
          format: uuid
          nullable: true
        visible:
          type: boolean
          nullable: true
        locked:
          type: boolean
          nullable: true
        enableReactions:
          type: boolean
          nullable: true
        viewCount:
          type: integer
          format: int32
          nullable: true
        likeCount:
          type: integer
          format: int32
          nullable: true
        commentCount:
          type: integer
          format: int32
          nullable: true
        dataComponents:
          type: array
          items:
            $ref: '#/components/schemas/DataComponent'
          nullable: true
      additionalProperties: false
    BucketReference:
      type: object
      properties:
        dataComponentType:
          type: string
          nullable: true
        bucketId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    Channel:
      type: object
      properties:
        channelId:
          type: string
          format: uuid
          nullable: true
        title:
          type: string
          nullable: true
        avatar:
          type: string
          format: uuid
          nullable: true
        visible:
          type: boolean
          nullable: true
        locked:
          type: boolean
          nullable: true
        role:
          type: string
          nullable: true
        ownerId:
          type: string
          format: uuid
          nullable: true
        editorIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    CloseTunnelRequest:
      type: object
      properties:
        tunnelId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    CloseTunnelResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
      additionalProperties: false
    Contact:
      type: object
      properties:
        accountId:
          type: string
          format: uuid
          nullable: true
        accountName:
          type: string
          nullable: true
        contactStatus:
          type: string
          nullable: true
      additionalProperties: false
    CreateChannelRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
        visible:
          type: boolean
          nullable: true
        locked:
          type: boolean
          nullable: true
        editorIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    CreateChannelResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/CreateChannelResponseData'
      additionalProperties: false
    CreateChannelResponseData:
      type: object
      properties:
        createdChannel:
          $ref: '#/components/schemas/Channel'
      additionalProperties: false
    CreateGroupChatRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
        recipientIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    CreateGroupChatResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/CreateGroupChatResponseData'
      additionalProperties: false
    CreateGroupChatResponseData:
      type: object
      properties:
        createdGroupChat:
          $ref: '#/components/schemas/GroupChat'
      additionalProperties: false
    CreateTunnelRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        clientPort:
          type: integer
          format: int32
          nullable: true
        clientPath:
          type: string
          nullable: true
        publicKey:
          type: string
          nullable: true
      additionalProperties: false
    CreateTunnelResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/CreateTunnelResponseData'
      additionalProperties: false
    CreateTunnelResponseData:
      type: object
      properties:
        tunnelId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    DataComponent:
      type: object
      properties:
        dataComponentType:
          type: string
          nullable: true
      additionalProperties: false
    DeleteTunnelRequest:
      type: object
      properties:
        tunnelId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    DeleteTunnelResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
      additionalProperties: false
    DownloadFileRequest:
      type: object
      properties:
        fileId:
          type: string
          format: uuid
          nullable: true
        thumbnailSize:
          type: string
          nullable: true
      additionalProperties: false
    Feed:
      type: object
      properties:
        feedId:
          type: string
          format: uuid
          nullable: true
        accountId:
          type: string
          format: uuid
          nullable: true
        featureType:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        avatar:
          type: string
          format: uuid
          nullable: true
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Post'
          nullable: true
      additionalProperties: false
    FileInfo:
      type: object
      properties:
        fileId:
          type: string
          format: uuid
          nullable: true
        title:
          type: string
          nullable: true
        size:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    GetAccountContactsRequest:
      type: object
      additionalProperties: false
    GetAccountContactsResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          nullable: true
      additionalProperties: false
    GetAccountFeedRequest:
      type: object
      properties:
        accountId:
          type: string
          format: uuid
          nullable: true
        before:
          type: integer
          format: int64
          nullable: true
        after:
          type: integer
          format: int64
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    GetAccountFeedResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/Feed'
      additionalProperties: false
    GetAccountProfileRequest:
      type: object
      properties:
        accountId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    GetAccountProfileResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/Profile'
      additionalProperties: false
    GetChannelMessagesRequest:
      type: object
      properties:
        channelId:
          type: string
          format: uuid
          nullable: true
        messageId:
          type: string
          format: uuid
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    GetChannelMessagesResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/GetChannelMessagesResponseData'
      additionalProperties: false
    GetChannelMessagesResponseData:
      type: object
      properties:
        channelId:
          type: string
          format: uuid
          nullable: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          nullable: true
      additionalProperties: false
    GetChannelsRequest:
      type: object
      properties:
        ownerId:
          type: string
          format: uuid
          nullable: true
        editorId:
          type: string
          format: uuid
          nullable: true
        channelId:
          type: string
          format: uuid
          nullable: true
        title:
          type: string
          nullable: true
      additionalProperties: false
    GetChannelsResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
          nullable: true
      additionalProperties: false
    GetGroupChatMessagesRequest:
      type: object
      properties:
        groupChatId:
          type: string
          format: uuid
          nullable: true
        messageId:
          type: string
          format: uuid
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    GetGroupChatMessagesResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/GetGroupChatMessagesResponseData'
      additionalProperties: false
    GetGroupChatMessagesResponseData:
      type: object
      properties:
        groupChatId:
          type: string
          format: uuid
          nullable: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          nullable: true
      additionalProperties: false
    GetGroupChatsRequest:
      type: object
      properties:
        recipientIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    GetGroupChatsResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/GroupChat'
          nullable: true
      additionalProperties: false
    GetMyAccountsRequest:
      type: object
      properties:
        main:
          type: boolean
          nullable: true
        sub:
          type: boolean
          nullable: true
        shared:
          type: boolean
          nullable: true
        details:
          type: boolean
          nullable: true
      additionalProperties: false
    GetMyAccountsResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/GetMyAccountsResponseData'
      additionalProperties: false
    GetMyAccountsResponseData:
      type: object
      properties:
        subAccounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
          nullable: true
        sharedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
          nullable: true
        mainAccount:
          $ref: '#/components/schemas/Account'
        currentAccount:
          $ref: '#/components/schemas/Account'
      additionalProperties: false
    GetMyChannelsRequest:
      type: object
      properties:
        owner:
          type: boolean
          nullable: true
        editor:
          type: boolean
          nullable: true
        subscriber:
          type: boolean
          nullable: true
      additionalProperties: false
    GetMyChannelsResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
          nullable: true
      additionalProperties: false
    GetP2PChatsRequest:
      type: object
      properties:
        recipientId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    GetP2PChatsResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/P2pChat'
          nullable: true
      additionalProperties: false
    GetP2pChatMessagesRequest:
      type: object
      properties:
        recipientId:
          type: string
          format: uuid
          nullable: true
        messageId:
          type: string
          format: uuid
          nullable: true
        limit:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    GetP2pChatMessagesResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/GetP2pChatMessagesResponseData'
      additionalProperties: false
    GetP2pChatMessagesResponseData:
      type: object
      properties:
        recipientId:
          type: string
          format: uuid
          nullable: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          nullable: true
      additionalProperties: false
    GroupChat:
      type: object
      properties:
        groupChatId:
          type: string
          format: uuid
          nullable: true
        title:
          type: string
          nullable: true
        recipientIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    InviteToGroupChatRequest:
      type: object
      properties:
        groupChatId:
          type: string
          format: uuid
          nullable: true
        recipientIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    InviteToGroupChatResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/InviteToGroupChatResponseData'
      additionalProperties: false
    InviteToGroupChatResponseData:
      type: object
      properties:
        groupChatId:
          type: string
          format: uuid
          nullable: true
        invitedRecipientIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    MatchedCategory:
      type: object
      properties:
        categoryTitle:
          type: string
          nullable: true
        categoryID:
          type: string
          format: uuid
          nullable: true
        matchedCount:
          type: integer
          format: int64
          nullable: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/MatchedCategory'
          nullable: true
      additionalProperties: false
    Message:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
          nullable: true
        publisherId:
          type: string
          format: uuid
          nullable: true
        publishedOn:
          type: integer
          format: int64
          nullable: true
        updatedOn:
          type: integer
          format: int64
          nullable: true
        messageReactions:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              type: string
              format: uuid
          nullable: true
        dataComponent:
          nullable: true
      additionalProperties: false
    OpenBucketRequest:
      type: object
      properties:
        bucketId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    OpenBucketResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/Bucket'
      additionalProperties: false
    OpenTunnelRequest:
      type: object
      properties:
        tunnelId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    OpenTunnelResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/OpenTunnelResponseData'
      additionalProperties: false
    OpenTunnelResponseData:
      type: object
      properties:
        tunnelId:
          type: string
          format: uuid
          nullable: true
        serverPort:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    P2pChat:
      type: object
      properties:
        recipientId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    Post:
      type: object
      properties:
        publishedOn:
          type: integer
          format: int64
          nullable: true
        editedOn:
          type: integer
          format: int64
          nullable: true
        dataComponent:
          $ref: '#/components/schemas/BucketReference'
      additionalProperties: false
    Profile:
      type: object
      properties:
        profileId:
          type: string
          format: uuid
          nullable: true
        featureType:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        avatar:
          type: string
          format: uuid
          nullable: true
        visible:
          type: boolean
          nullable: true
        locked:
          type: boolean
          nullable: true
        enableReactions:
          type: boolean
          nullable: true
        viewCount:
          type: integer
          format: int32
          nullable: true
        likeCount:
          type: integer
          format: int32
          nullable: true
        commentCount:
          type: integer
          format: int32
          nullable: true
        pinWall:
          type: array
          items:
            $ref: '#/components/schemas/DataComponent'
          nullable: true
        subBuckets:
          type: array
          items:
            $ref: '#/components/schemas/Bucket'
          nullable: true
      additionalProperties: false
    ReactGroupChatMessageRequest:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
          nullable: true
        reaction:
          type: string
          nullable: true
      additionalProperties: false
    ReactGroupChatMessageResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/ReactGroupChatMessageResponseData'
      additionalProperties: false
    ReactGroupChatMessageResponseData:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
          nullable: true
        addedReaction:
          type: string
          nullable: true
      additionalProperties: false
    ReactP2pChatMessageRequest:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
          nullable: true
        reaction:
          type: string
          nullable: true
      additionalProperties: false
    ReactP2pChatMessageResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/ReactP2pChatMessageResponseData'
      additionalProperties: false
    ReactP2pChatMessageResponseData:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
          nullable: true
        addedReaction:
          type: string
          nullable: true
      additionalProperties: false
    RemoveGroupChatMessageReactionRequest:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
          nullable: true
        reaction:
          type: string
          nullable: true
      additionalProperties: false
    RemoveLikeFromBucketRequest:
      type: object
      properties:
        bucketId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    RemoveLikeFromBucketResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/RemoveLikeToBucketResponseData'
      additionalProperties: false
    RemoveLikeToBucketResponseData:
      type: object
      properties:
        bucketId:
          type: string
          format: uuid
          nullable: true
        like:
          type: boolean
          nullable: true
      additionalProperties: false
    RemoveP2pChatMessageReactionRequest:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
          nullable: true
        reaction:
          type: string
          nullable: true
      additionalProperties: false
    ReplyGroupChatMessageRequest:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
          nullable: true
        dataComponent:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    ReplyGroupChatMessageResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/ReplyGroupChatMessageResponseData'
      additionalProperties: false
    ReplyGroupChatMessageResponseData:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
          nullable: true
        sentReply:
          $ref: '#/components/schemas/Message'
      additionalProperties: false
    ReplyP2PMessageResponseData:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
          nullable: true
        sentReply:
          $ref: '#/components/schemas/Message'
      additionalProperties: false
    ReplyP2pChatMessageRequest:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
          nullable: true
        dataComponent:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    ReplyP2pChatMessageResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/ReplyP2PMessageResponseData'
      additionalProperties: false
    SendToChannelRequest:
      type: object
      properties:
        channelId:
          type: string
          format: uuid
          nullable: true
        dataComponent:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    SendToChannelResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/SendToChannelResponseData'
      additionalProperties: false
    SendToChannelResponseData:
      type: object
      properties:
        channelId:
          type: string
          format: uuid
          nullable: true
        sentMessage:
          $ref: '#/components/schemas/Message'
      additionalProperties: false
    SendToGroupChatRequest:
      type: object
      properties:
        groupChatId:
          type: string
          format: uuid
          nullable: true
        dataComponent:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    SendToGroupChatResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/SendToGroupChatResponseData'
      additionalProperties: false
    SendToGroupChatResponseData:
      type: object
      properties:
        groupChatId:
          type: string
          format: uuid
          nullable: true
        sentMessage:
          $ref: '#/components/schemas/Message'
      additionalProperties: false
    SendToP2pChatRequest:
      type: object
      properties:
        recipientId:
          type: string
          format: uuid
          nullable: true
        dataComponent:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    SendToP2pChatResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/SendToP2pResponseData'
      additionalProperties: false
    SendToP2pChatTestRequest:
      type: object
      properties:
        recipientId:
          type: string
          format: uuid
          nullable: true
        dataComponent:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    SendToP2pChatTestResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/SendToP2pResponseTestData'
      additionalProperties: false
    SendToP2pResponseData:
      type: object
      properties:
        recipientId:
          type: string
          format: uuid
          nullable: true
        sentMessage:
          $ref: '#/components/schemas/Message'
      additionalProperties: false
    SendToP2pResponseTestData:
      type: object
      properties:
        recipientId:
          type: string
          format: uuid
          nullable: true
        sentMessage:
          $ref: '#/components/schemas/Message'
      additionalProperties: false
    SubscribeToChannelRequest:
      type: object
      properties:
        channelId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    SubscribeToChannelResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/SubscribeToChannelResponseData'
      additionalProperties: false
    SubscribeToChannelResponseData:
      type: object
      properties:
        channelId:
          type: string
          format: uuid
          nullable: true
        subscribed:
          type: boolean
          nullable: true
      additionalProperties: false
    UnsubscribeToChannelRequest:
      type: object
      properties:
        channelId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    UnsubscribeToChannelResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/UnsubscribeToChannelResponseData'
      additionalProperties: false
    UnsubscribeToChannelResponseData:
      type: object
      properties:
        channelId:
          type: string
          format: uuid
          nullable: true
        subscribed:
          type: boolean
          nullable: true
      additionalProperties: false
    UpdateAccountProfileRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        avatar:
          type: string
          format: uuid
          nullable: true
        visible:
          type: boolean
          nullable: true
        locked:
          type: boolean
          nullable: true
        enableReactions:
          type: boolean
          nullable: true
        pinWall:
          type: array
          items:
            type: object
            additionalProperties: {}
          nullable: true
      additionalProperties: false
    UpdateAccountProfileResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/Profile'
      additionalProperties: false
    UpdateBucketContentRequest:
      type: object
      properties:
        bucketId:
          type: string
          format: uuid
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        avatar:
          type: string
          format: uuid
          nullable: true
        visible:
          type: boolean
          nullable: true
        locked:
          type: boolean
          nullable: true
        enableReactions:
          type: boolean
          nullable: true
        dataComponents:
          type: array
          items:
            type: object
            additionalProperties: {}
          nullable: true
      additionalProperties: false
    UpdateBucketContentResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/UpdateBucketContentResponseData'
      additionalProperties: false
    UpdateBucketContentResponseData:
      type: object
      properties:
        accountId:
          type: string
          format: uuid
          nullable: true
        updatedBucket:
          $ref: '#/components/schemas/Bucket'
      additionalProperties: false
    UpdateGroupChatMessageRequest:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
          nullable: true
        dataComponent:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    UpdateGroupChatMessageResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/UpdateGroupChatMessageResponseData'
      additionalProperties: false
    UpdateGroupChatMessageResponseData:
      type: object
      properties:
        updatedMessage:
          $ref: '#/components/schemas/Message'
      additionalProperties: false
    UpdateP2pChatMessageRequest:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
          nullable: true
        dataComponent:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    UpdateP2pChatMessageResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/UpdateP2pMessageResponseData'
      additionalProperties: false
    UpdateP2pMessageResponseData:
      type: object
      properties:
        updatedMessage:
          $ref: '#/components/schemas/Message'
      additionalProperties: false
    UpdatePostContentRequest:
      type: object
      properties:
        bucketId:
          type: string
          format: uuid
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        avatar:
          type: string
          format: uuid
          nullable: true
        visible:
          type: boolean
          nullable: true
        locked:
          type: boolean
          nullable: true
        enableReactions:
          type: boolean
          nullable: true
        dataComponents:
          type: array
          items:
            type: object
            additionalProperties: {}
          nullable: true
      additionalProperties: false
    UpdatePostContentResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/UpdatePostContentResponseData'
      additionalProperties: false
    UpdatePostContentResponseData:
      type: object
      properties:
        feedId:
          type: string
          format: uuid
          nullable: true
        accountId:
          type: string
          format: uuid
          nullable: true
        updatedPost:
          $ref: '#/components/schemas/Post'
      additionalProperties: false
    UploadFileResponse:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          nullable: true
        error:
          type: string
          nullable: true
        data:
          $ref: '#/components/schemas/UploadFileResponseData'
      additionalProperties: false
    UploadFileResponseData:
      type: object
      properties:
        uploadedFiles:
          type: array
          items:
            $ref: '#/components/schemas/FileInfo'
          nullable: true
      additionalProperties: false
